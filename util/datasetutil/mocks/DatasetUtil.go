// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// DatasetUtil is an autogenerated mock type for the DatasetUtil type
type DatasetUtil struct {
	mock.Mock
}

// Compress7Zip provides a mock function with given fields: file
func (_m *DatasetUtil) Compress7Zip(file string) error {
	ret := _m.Called(file)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(file)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Extract7Zip provides a mock function with given fields: file, password
func (_m *DatasetUtil) Extract7Zip(file string, password string) error {
	ret := _m.Called(file, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(file, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TimedPruneDirectory provides a mock function with given fields: directory, seconds
func (_m *DatasetUtil) TimedPruneDirectory(directory string, seconds int) {
	_m.Called(directory, seconds)
}

type mockConstructorTestingTNewDatasetUtil interface {
	mock.TestingT
	Cleanup(func())
}

// NewDatasetUtil creates a new instance of DatasetUtil. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDatasetUtil(t mockConstructorTestingTNewDatasetUtil) *DatasetUtil {
	mock := &DatasetUtil{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
